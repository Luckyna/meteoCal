<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
      xmlns:p="http://primefaces.org/ui"
      xmlns:pm="http://primefaces.org/mobile"
      xmlns:pt="http://xmlns.jcp.org/jsf/passthrough">


    <ui:composition template="/template.xhtml">
        <ui:define name="secondaryHead">

            <link type="text/css" rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500" />

            <script src="https://maps.googleapis.com/maps/api/js?v=3.exp&amp;libraries=places" />

            <h:outputStylesheet library="css" name="maps.css"/>

            <script>

                $(document).ready(function () {
                    initialize();
                });

// This example displays an address form, using the autocomplete feature
// of the Google Places API to help users fill in the information.

                var placeSearch, autocomplete;

                var componentForm = {
                    street_number: 'short_name',
                    route: 'long_name',
                    locality: 'long_name',
                    administrative_area_level_1: 'short_name',
                    country: 'long_name',
                    postal_code: 'short_name'
                };

                function initialize() {
                    // Create the autocomplete object, restricting the search
                    // to geographical location types.
                    autocomplete = new google.maps.places.Autocomplete(
                            /** @type {HTMLInputElement} */(document.getElementById('autocomplete')),
                            {types: ['geocode']});
                    // When the user selects an address from the dropdown,
                    // populate the address fields in the form.
                    google.maps.event.addListener(autocomplete, 'place_changed', function () {
                        fillInAddress();
                    });

                }
// [START region_fillform]
                function fillInAddress() {
                    // Get the place details from the autocomplete object.

                    if (typeof autocomplete.getPlace() !== 'undefined') {
                        var place = autocomplete.getPlace();
                        for (var component in componentForm) {
                            document.getElementById("newEventForm:" + component).value = '';
                            document.getElementById("newEventForm:" + component).disabled = false;
                        }

                        // Get each component of the address from the place details
                        // and fill the corresponding field on the form.
                        for (var i = 0; i &lt; place.address_components.length; i++) {
                            var addressType = place.address_components[i].types[0];
                            if (componentForm[addressType]) {
                                var val = place.address_components[i][componentForm[addressType]];
                                document.getElementById("newEventForm:" + addressType).value = val;
                            }
                        }
                        document.getElementById("newEventForm:autocompleteUsed").value = true;
                    } else {
                        document.getElementById("newEventForm:locality").value = document.getElementById("autocomplete").value;
                        document.getElementById("newEventForm:autocompleteUsed").value = false;
                    }
                }

// [END region_fillform]

// [START region_geolocation]
// Bias the autocomplete object to the user's geographical location,
// as supplied by the browser's 'navigator.geolocation' object.
                function geolocate() {
                    if (navigator.geolocation) {
                        navigator.geolocation.getCurrentPosition(function (position) {
                            var geolocation = new google.maps.LatLng(
                                    position.coords.latitude, position.coords.longitude);
                            var circle = new google.maps.Circle({
                                center: geolocation,
                                radius: position.coords.accuracy
                            });
                            autocomplete.setBounds(circle.getBounds());
                        });
                    }
                }
// [END region_geolocation]

            </script>

        </ui:define>

        <f:metadata>
            <f:viewParam name="id" value="#{eventToManage.id}"/>
            <f:viewAction action="#{eventToManage.setEditModality}"/>
        </f:metadata>


        <ui:define name="title">
            manage event
        </ui:define>
        <ui:define name="content">
            <h1>            
                <h:outputLabel rendered="#{!eventToManage.saved}" value="Create a new event"/>
                <h:outputLabel rendered="#{eventToManage.saved}" value="Update event #{eventToManage.title}"/>
            </h1>
            <div class="ui-grid ui-grid-responsive">
                <div class="ui-grid-row">
                    <div class="ui-grid-col-6">
                        <p:panel>
                            <h:form id="newEventForm">

                                <p:panelGrid class="noBorder" columns="2">

                                    <i class="fa fa-tag"/> Title:
                                    <h:inputText pt:placeholder="Title" value="#{eventToManage.title}" style="width: 176px; text-overflow: ellipsis;"/>

                                    <i class="fa fa-calendar"/> Add into:
                                    <p:selectOneMenu value="#{eventToManage.calendarName}" style="width: 180px; text-overflow: ellipsis;"  >
                                        <f:selectItems value="#{calendar.calendarNames}"/>
                                        <f:selectItem value="#{null}" itemLabel="No Calendar" />
                                    </p:selectOneMenu>

                                    <i class="fa fa-calendar-o"></i> Starting date:
                                    <h:inputText id="startingDate" value="#{eventToManage.startDate}">
                                        <f:passThroughAttribute name="type" value="date" />
                                    </h:inputText>

                                    <i class="fa fa-calendar-o"></i> Until:
                                    <h:inputText value="#{eventToManage.endDate}">

                                        <f:passThroughAttribute name="type" value="date" />
                                    </h:inputText>

                                    <i class="fa fa-clock-o"></i> From:
                                    <h:inputText value="#{eventToManage.startTime}">
                                        <f:passThroughAttribute name="type" value="time" />
                                    </h:inputText>

                                    <i class="fa fa-clock-o"></i> To:
                                    <h:inputText value="#{eventToManage.endTime}">
                                        <f:passThroughAttribute name="type" value="time" />
                                    </h:inputText>

                                    <p:outputPanel>
                                        <p:outputLabel id="toolTipTrack2">
                                            <i class="fa fa-globe"></i> Public:<sup><i class="fa fa-info"/></sup> 
                                        </p:outputLabel>
                                        <p:tooltip for="toolTipTrack2" value="Every user can see the event when public!" />
                                    </p:outputPanel>
                                    <p:outputPanel>
                                        <h:selectBooleanCheckbox id="privacyCheckbox" disabled="#{eventToManage.saved}" value="#{eventToManage.publicAccess}"/>
                                        <p:tooltip for="privacyCheckbox" value="Once created the privacy can't be changed" />
                                    </p:outputPanel>
                                    <i class="fa fa-map-marker"></i> Location:

                                    <p:outputPanel >
                                        <input id="autocomplete" class="locationField" placeholder="Enter your address" value="#{eventToManage.location}" 
                                               onFocus="geolocate()" onblur="fillInAddress()" type="text"/>
                                    </p:outputPanel>

                                    <p:outputPanel>
                                        <p:outputLabel id="toolTipTrack">
                                            <i class="fa fa-umbrella"></i> Outdoor:<sup><i class="fa fa-info"/></sup> 
                                        </p:outputLabel>
                                        <p:tooltip for="toolTipTrack" value="We will check the weather for you!" />
                                    </p:outputPanel>
                                    <h:selectBooleanCheckbox value="#{eventToManage.outdoor}"/>



                                </p:panelGrid>

                                <h:inputHidden class="field" id="street_number" value="#{place.streetNumber}" ></h:inputHidden>
                                <h:inputHidden class="field" id="route" value="#{place.route}"  ></h:inputHidden>
                                <h:inputHidden class="field" id="locality" value="#{place.locality}"   ></h:inputHidden>
                                <h:inputHidden class="field" id="administrative_area_level_1" value="#{place.administrativeArea}" ></h:inputHidden>
                                <h:inputHidden class="field" id="postal_code" value="#{place.postalCode}" ></h:inputHidden>
                                <h:inputHidden class="field" id="country" value="#{place.country}" ></h:inputHidden>
                                <h:inputHidden class="field" id="autocompleteUsed" value="#{eventToManage.hasLocation}" ></h:inputHidden>

                                <br/>

                                <i class="fa fa-quote-left"/><h:outputLabel value=" Description:" /><br />
                                <p:inputTextarea value="#{eventToManage.description}" style="width: 100%;" autoResize="true" /><br />

                                <br/>

                                <p:commandButton id="save" value="Save" action="#{eventToManage.checkEvent()}"/>
                                <p:button value="Cancel" rendered="#{!eventToManage.saved}" outcome="/s/calendar.xhtml"/> 
                                <p:commandButton id="delete" value="Delete" rendered="#{eventToManage.saved}" action="#{eventToManage.deleteEvent}"/>
                                <p:button value="Show Event" rendered="#{eventToManage.saved}" outcome="/s/eventPage.xhtml?id=#{eventToManage.id}"/>

                                <p:commandButton value="Try Reschedule" actionListener="#{eventToManage.suggestReschedule()}" rendered="#{eventToManage.saved}"/>
                            </h:form>
                        </p:panel>
                    </div>
                    <div class="ui-grid-col-6">
                        <p:panel id="inviteDiv">

                            <i class="fa fa-users"/> Guests:

                            <br/><br/>

                            <h:form id="inviteForm">
                                <p:fieldset legend="Pending guests" rendered="#{not empty eventToManage.guests}" >
                                    <c:forEach items="#{eventToManage.guests}" var="g" >
                                        <p:commandButton icon="ui-icon-closethick" id="toolTipTrack3" class="linkStyle2" value="#{g.email}" actionListener="#{eventToManage.removeGuest(g)}" update="@form" />
                                        <br/>
                                    </c:forEach>
                                </p:fieldset><br/>

                                <h:outputLabel value="Invite: "/>
                                <p:inputText id="email" value="#{eventToManage.newGuestEmail}" required="true" validatorMessage="insert minimum 2 character" requiredMessage="Insert a search key">
                                    <f:validateLength minimum="2" />
                                </p:inputText>
                                <p:commandButton value="Search" update="@form" actionListener="#{eventToManage.showResultUsers}" /><br/><br/>

                                <p:panel rendered="#{eventToManage.displayResultUsers}" >
                                    <h:outputText value="Results:  (click to invite!)" /><br/><br/>
                                    <c:forEach items="#{eventToManage.resultUsers}" var="u">
                                        <p:commandButton class="linkStyle2" update="@form" value="#{u.email}" actionListener="#{eventToManage.invite(u.email)}" /><br/>
                                    </c:forEach>

                                </p:panel><br/>
                            </h:form>

                            <p:tabView>
                                <p:tab title="(#{eventToManage.acceptedInvitations.size()}) Partecipants">
                                    <c:forEach items="#{eventToManage.acceptedInvitations}" var="yesUser">
                                        <p:link href="/s/calendar.xhtml?id=#{yesUser.id}" value="#{yesUser.name} #{yesUser.surname}"/><br/>
                                    </c:forEach>
                                </p:tab>
                                <p:tab title="(#{eventToManage.declinedInvitations.size()}) Declined">
                                    <c:forEach items="#{eventToManage.declinedInvitations}" var="noUser">
                                        <p:link href="/s/calendar.xhtml?id=#{noUser.id}" value="#{noUser.name} #{noUser.surname}"/><br/>
                                    </c:forEach>
                                </p:tab>
                                <p:tab title="(#{eventToManage.noAnswerInvitations.size()}) No Asnwer">
                                    <c:forEach items="#{eventToManage.noAnswerInvitations}" var="bhoUser">
                                        <p:link href="/s/calendar.xhtml?id=#{bhoUser.id}" value="#{bhoUser.name} #{bhoUser.surname}"/><br/>
                                    </c:forEach>
                                </p:tab>
                                <p:tab title="(#{eventToManage.publicJoinUsers.size()}) Public Join" rendered="#{viewEvent.publicAccess}">
                                    <c:forEach items="#{eventToManage.publicJoinUsers}" var="publicUser">
                                        <p:link href="/s/calendar.xhtml?id=#{publicUser.id}" value="#{publicUser.name} #{publicUser.surname}"/><br/>
                                    </c:forEach>
                                </p:tab>
                            </p:tabView>

                        </p:panel>
                    </div>
                </div>
            </div>


            <p:dialog closeOnEscape="true" header="Reschedule suggested" id="conflictDialog" widgetVar="conflictDialog" minHeight="40" resizable="false" draggable="false">
                <h:outputText id="dialogMessage" value="#{eventToManage.dialogueMessage}" style="white-space: pre-wrap"></h:outputText><br/>
                <f:facet name="footer">
                    <h:form id="buttonsForm">
                        <p:commandButton widgetVar="rescheduleButton" id="rescheduleButton" value="#{eventToManage.rescheduleButton}" rendered="#{eventToManage.showRescheduleButton}"  oncomplete="PF('conflictDialog').hide()" actionListener="#{eventToManage.reschedule()}"/>
                        <p:commandButton widgetVar="saveButton" id="saveButton" value="#{eventToManage.saveButton}"  oncomplete="PF('conflictDialog').hide()" actionListener="#{eventToManage.save()}"/>                                   
                        <p:commandButton value="Cancel" type="button" onclick="PF('conflictDialog').hide()" />
                    </h:form>               
                </f:facet>
            </p:dialog>

        </ui:define>

    </ui:composition>
</html>
